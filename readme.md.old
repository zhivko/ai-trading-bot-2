BTCUSDT chart
1.) if btcusdtHistory.csv does not exist, pull 5 years of old OHLC btcusdt daily data and put it to CSV file btcusdtHistory.csv. Otherwise use existing CSV file. Columns of columns in csv are: timestamp,open,high,low,close,volume
2.) add RSI, STO RSI, MACD BOLINGER bands indicator to data framework
3.) construct top "price chart" with OHLC price candles, BB indicator with BB upper, BB middle, and BB lower line - name it price with BB
4.) add middle chart named "RSI and StoRSI" below "price chart". Add RSI and StoRSI indicators on it - and normalize sto rsi indicator to be between 0 and 100
5.) add MACD bottom chart named "MACD". Add MACD indicator with histogram on it


Opening long trade Logic
1.) middle of candle (average of open and close) is above BB middle
2.) RSI is above 50
3.) STO Rsi crosses RSI and additionally we need to check that within previous 5 bars signal line is NOT below MACD line
4.) set stop loss to below 5% of previous candle close for trade
5.) close a trade when STO RSI fall drastically- STO rsi falls beneath 50
6.) draw open and close markers on price chart. Green triangles to be used with long trades. Red triangles should be used for short trades.
7.) add anther subplot below all charts and name it "Net value". Imagine having 10000USD, and then trade 10% of this net value, to go long with 3x leverage BTC with this money when opening trade and closing trade as per above instructions. Draw net value of trading on "Net value" subplot.


Opening short trade Logic
1.) inverse of opening long trade logic



Why this: [BUY] 2021-09-06 | 52663.90 | BTC:0.0203 [SELL] 2021-09-08 | 46048.31 | USD:936.29
I see macd signal is below macd... Condition in line: macd_signal_safe = all(df.iloc[i - j]['MACD_signal'] >= df.iloc[i - j]['MACD'] for j in range(1, 6))
Should be false.